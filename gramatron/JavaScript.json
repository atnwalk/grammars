{
    "AUX_1": [
        "''",
        "'[' EXPR ']'",
        "'|=' EXPR",
        "'^=' EXPR",
        "'&=' EXPR",
        "'>>>=' EXPR",
        "'>>=' EXPR",
        "'<<=' EXPR",
        "'**=' EXPR",
        "'%=' EXPR",
        "'/=' EXPR",
        "'*=' EXPR",
        "'-=' EXPR",
        "'+=' EXPR",
        "'=' EXPR"
    ],
    "START": [
        "PROGRAM"
    ],
    "PROGRAM": [
        "AUX_2"
    ],
    "AUX_2": [
        "GROUP_0",
        "GROUP_0 AUX_2"
    ],
    "GROUP_0": [
        "STATEMENT '\\n'"
    ],
    "OBJECT": [
        "IDENTIFIER",
        "'{' OBJMEMBER '}'",
        "'{}'"
    ],
    "OBJMEMBER": [
        "VAR ': ' LITERAL AUX_3"
    ],
    "AUX_3": [
        "''",
        "GROUP_1"
    ],
    "GROUP_1": [
        "', ' OBJMEMBER"
    ],
    "VAR": [
        "'a'",
        "'b'",
        "'c'",
        "'d'",
        "'e'",
        "'f'",
        "'g'",
        "'h'"
    ],
    "METHODNAME": [
        "IDENTIFIER",
        "'eval'",
        "'uneval'",
        "'isFinite'",
        "'isNaN'",
        "'parseFloat'",
        "'parseInt'",
        "'decodeURI'",
        "'decodeURIComponent'",
        "'encodeURI'",
        "'encodeURIComponent'",
        "'escape'",
        "'unescape'",
        "'assign'",
        "'create'",
        "'defineProperty'",
        "'defineProperties'",
        "'entries'",
        "'freeze'",
        "'getOwnPropertyDescriptor'",
        "'getOwnPropertyDescriptors'",
        "'getOwnPropertyNames'",
        "'getOwnPropertySymbols'",
        "'getPrototypeOf'",
        "'is'",
        "'isExtensible'",
        "'isFrozen'",
        "'isSealed'",
        "'keys'",
        "'preventExtensions'",
        "'seal'",
        "'setPrototypeOf'",
        "'values'",
        "'delete'",
        "'__defineGetter__'",
        "'__defineSetter__'",
        "'__lookupGetter__'",
        "'__lookupSetter__'",
        "HASOWNPROPERTY",
        "'isPrototypeOf'",
        "'propertyIsEnumerable'",
        "'toSource'",
        "'toString'",
        "'unwatch'",
        "'valueOf'",
        "'watch'",
        "'apply'",
        "'bind'",
        "'call'",
        "'isGenerator'",
        "'for'",
        "'keyFor'",
        "'stringify'",
        "'isInteger'",
        "'isSafeInteger'",
        "'toInteger'",
        "'toExponential'",
        "'toFixed'",
        "'toPrecision'",
        "'abs'",
        "'acos'",
        "'acosh'",
        "'asin'",
        "'asinh'",
        "'atan'",
        "'atanh'",
        "'atan2'",
        "'cbrt'",
        "'ceil'",
        "'clz32'",
        "'cos'",
        "'cosh'",
        "'exp'",
        "'expm1'",
        "'floor'",
        "'fround'",
        "'hypot'",
        "'imul'",
        "'log'",
        "'log1p'",
        "'log10'",
        "'log2'",
        "'max'",
        "'min'",
        "'pow'",
        "'random'",
        "'round'",
        "'sign'",
        "'sin'",
        "'sinh'",
        "'sqrt'",
        "'tan'",
        "'tanh'",
        "'trunc'",
        "'now'",
        "'parse'",
        "'UTC'",
        "'getDate'",
        "'getDay'",
        "'getFullYear'",
        "'getHours'",
        "'getMilliseconds'",
        "'getMinutes'",
        "'getMonth'",
        "'getSeconds'",
        "'getTime'",
        "'getTimezoneOffset'",
        "'getUTCDate'",
        "'getUTCDay'",
        "'getUTCFullYear'",
        "'getUTCHours'",
        "'getUTCMilliseconds'",
        "'getUTCMinutes'",
        "'getUTCMonth'",
        "'getUTCSeconds'",
        "'getYear'",
        "'setDate'",
        "'setFullYear'",
        "'setHours'",
        "'setMilliseconds'",
        "'setMinutes'",
        "'setMonth'",
        "'setSeconds'",
        "'setTime'",
        "'setUTCDate'",
        "'setUTCFullYear'",
        "'setUTCHours'",
        "'setUTCMilliseconds'",
        "'setUTCMinutes'",
        "'setUTCMonth'",
        "'setUTCSeconds'",
        "'setYear'",
        "'toDateString'",
        "'toISOString'",
        "'toJSON'",
        "'toGMTString'",
        "'toLocaleDateString'",
        "'toLocaleFormat'",
        "'toLocaleString'",
        "'toLocaleTimeString'",
        "'toTimeString'",
        "'toUTCString'",
        "'indexOf'",
        "'substring'",
        "'charAt'",
        "'strcmp'",
        "'fromCharCode'",
        "'fromCodePoint'",
        "'raw'",
        "'charCodeAt'",
        "'slice'",
        "'codePointAt'",
        "'concat'",
        "'includes'",
        "'endsWith'",
        "'lastIndexOf'",
        "'localeCompare'",
        "'match'",
        "'normalize'",
        "'padEnd'",
        "'padStart'",
        "'quote'",
        "'repeat'",
        "'replace'",
        "'search'",
        "'split'",
        "'startsWith'",
        "'substr'",
        "'toLocaleLowerCase'",
        "'toLocaleUpperCase'",
        "'toLowerCase'",
        "'toUpperCase'",
        "'trim'",
        "'trimleft'",
        "'trimright'",
        "'anchor'",
        "'big'",
        "'blink'",
        "'bold'",
        "'fixed'",
        "'fontcolor'",
        "'fontsize'",
        "'italics'",
        "'link'",
        "'small'",
        "'strike'",
        "'sub'",
        "'sup'",
        "'compile'",
        "'exec'",
        "'test'",
        "'from'",
        "'isArray'",
        "'of'",
        "'copyWithin'",
        "'fill'",
        "'pop'",
        "'push'",
        "'reverse'",
        "'shift'",
        "'sort'",
        "'splice'",
        "'unshift'",
        "'join'",
        "'every'",
        "'filter'",
        "'findIndex'",
        "'forEach'",
        "'map'",
        "'reduce'",
        "'reduceRight'",
        "'some'",
        "'move'",
        "'getInt8'",
        "'getUint8'",
        "'getInt16'",
        "'getUint16'",
        "'getInt32'",
        "'getUint32'",
        "'getFloat32'",
        "'getFloat64'",
        "'setInt8'",
        "'setUint8'",
        "'setInt16'",
        "'setUint16'",
        "'setInt32'",
        "'setUint32'",
        "'setFloat32'",
        "'setFloat64'",
        "'isView'",
        "'transfer'",
        "'clear'",
        "'get'",
        "'has'",
        "'set'",
        "'add'",
        "'splat'",
        "'check'",
        "'extractLane'",
        "'replaceLane'",
        "'load'",
        "'load1'",
        "'load2'",
        "'load3'",
        "'store'",
        "'store1'",
        "'store2'",
        "'store3'",
        "'addSaturate'",
        "'div'",
        "'mul'",
        "'neg'",
        "'reciprocalApproximation'",
        "'reciprocalSqrtApproximation'",
        "'subSaturate'",
        "'shuffle'",
        "'swizzle'",
        "'maxNum'",
        "'minNum'",
        "'select'",
        "'equal'",
        "'notEqual'",
        "'lessThan'",
        "'lessThanOrEqual'",
        "'greaterThan'",
        "'greaterThanOrEqual'",
        "'and'",
        "'or'",
        "'xor'",
        "'not'",
        "'shiftLeftByScalar'",
        "'shiftRightByScalar'",
        "'allTrue'",
        "'anyTrue'",
        "'fromFloat32x4'",
        "'fromFloat32x4Bits'",
        "'fromFloat64x2Bits'",
        "'fromInt32x4'",
        "'fromInt32x4Bits'",
        "'fromInt16x8Bits'",
        "'fromInt8x16Bits'",
        "'fromUint32x4'",
        "'fromUint32x4Bits'",
        "'fromUint16x8Bits'",
        "'fromUint8x16Bits'",
        "'compareExchange'",
        "'exchange'",
        "'wait'",
        "'wake'",
        "'isLockFree'",
        "'all'",
        "'race'",
        "'reject'",
        "'resolve'",
        "'catch'",
        "'then'",
        "'finally'",
        "'next'",
        "'return'",
        "'throw'",
        "'close'",
        "'send'",
        "'construct'",
        "'deleteProperty'",
        "'ownKeys'",
        "'getCanonicalLocales'",
        "'supportedLocalesOf'",
        "'resolvedOptions'",
        "'formatToParts'",
        "'instantiate'",
        "'instantiateStreaming'",
        "'compileStreaming'",
        "'validate'",
        "'customSections'",
        "'exports'",
        "'imports'",
        "'grow'",
        "'super'",
        "'void'",
        "'in'",
        "'instanceof'",
        "'print'"
    ],
    "METHODPARAMETERS": [
        "EXPR",
        "VAR '=' EXPR",
        "EXPR ',' METHODPARAMETERS",
        "VAR '=' EXPR ',' METHODPARAMETERS"
    ],
    "METHODCALL": [
        "OBJECT PROPERTY METHODCALL1",
        "METHODNAME ARGS METHODCALL1",
        "'SIMD.' SIMDTYPE '.' SIMDFUNCTION ARGS METHODCALL1"
    ],
    "METHODCALL1": [
        "AUX_4"
    ],
    "AUX_4": [
        "''",
        "GROUP_2"
    ],
    "GROUP_2": [
        "METHODNAME ARGS METHODCALL1",
        "SIMDFUNCTION ARGS METHODCALL1"
    ],
    "PROPERTY": [
        "'.length' AUX_5",
        "'.prototype' AUX_5",
        "'.constructor' AUX_5",
        "'.__proto__' AUX_5",
        "'.__noSuchMethod__' AUX_5",
        "'.__count__' AUX_5",
        "'.__parent__' AUX_5",
        "'.arguments' AUX_5",
        "'.arity' AUX_5",
        "'.caller' AUX_5",
        "'.name' AUX_5",
        "'.displayName' AUX_5",
        "'.iterator' AUX_5",
        "'.asyncIterator' AUX_5",
        "'.match' AUX_5",
        "'.replace' AUX_5",
        "'.search' AUX_5",
        "'.split' AUX_5",
        "'.hasInstance' AUX_5",
        "'.isConcatSpreadable' AUX_5",
        "'.unscopables' AUX_5",
        "'.species' AUX_5",
        "'.toPrimitive' AUX_5",
        "'.toStringTag' AUX_5",
        "'.fileName' AUX_5",
        "'.lineNumber' AUX_5",
        "'.columnNumber' AUX_5",
        "'.message' AUX_5",
        "'.name' AUX_5",
        "'.EPSILON' AUX_5",
        "'.MAX_SAFE_INTEGER' AUX_5",
        "'.MAX_VALUE' AUX_5",
        "'.MIN_SAFE_INTEGER' AUX_5",
        "'.MIN_VALUE' AUX_5",
        "'.NaN' AUX_5",
        "'.NEGATIVE_INFINITY' AUX_5",
        "'.POSITIVE_INFINITY' AUX_5",
        "'.E' AUX_5",
        "'.LN2' AUX_5",
        "'.LN10' AUX_5",
        "'.LOG2E' AUX_5",
        "'.LOG10E' AUX_5",
        "'.PI' AUX_5",
        "'.SQRT1_2' AUX_5",
        "'.SQRT2' AUX_5",
        "'.flags' AUX_5",
        "'.global' AUX_5",
        "'.ignoreCase' AUX_5",
        "'.multiline' AUX_5",
        "'.source' AUX_5",
        "'.sticky' AUX_5",
        "'.unicode' AUX_5",
        "'[' DECIMALNUMBER ']' AUX_5",
        "'[' STRING ']' AUX_5",
        "'.buffer' AUX_5",
        "'.byteLength' AUX_5",
        "'.byteOffset' AUX_5",
        "'.BYTES_PER_ELEMENT' AUX_5",
        "'.compare' AUX_5",
        "'.format' AUX_5",
        "'.callee' AUX_5",
        "'.caller' AUX_5",
        "'.memory' AUX_5",
        "'.exports' AUX_5"
    ],
    "AUX_5": [
        "''",
        "PROPERTY"
    ],
    "ARGS": [
        "'()'",
        "'(' EXPR AUX_69 ')'"
    ],
    "AUX_69": [
        "''",
        "GROUP_3 AUX_69"
    ],
    "GROUP_3": [
        "',' EXPR"
    ],
    "IDENTIFIERLIST": [
        "IDENTIFIER ', ' IDENTIFIERLIST",
        "'(' IDENTIFIERLIST '),' IDENTIFIERLIST",
        "IDENTIFIER"
    ],
    "STATEMENT": [
        "EXPR ';'",
        "VAR ':'",
        "DECLARATION",
        "'void ' EXPR ';'",
        "'return ' EXPR ';'",
        "CLASSDEF",
        "FUNCTIONDEF",
        "'async ' FUNCTIONDEF",
        "'export ' EXPR ';'",
        "'export ' FUNCTIONDEF",
        "'export ' DECLARATION",
        "'import ' IMPORTNAME ' as ' METHODNAME ' from ' STRING"
    ],
    "DECLARATION": [
        "DECLARATIONTYPE ' ' VAR ' = ' EXPR ';'",
        "DECLARATIONTYPE ' ' VAR PROPERTY ' = ' EXPR ';'",
        "DECLARATIONTYPE ' ' VAR '[' DECIMALNUMBER ']' ' = ' EXPR ';'",
        "DECLARATIONTYPE ' ' '{' ARGS '}' ' = ' EXPR ';'"
    ],
    "DECLARATIONTYPE": [
        "'var'",
        "'let'",
        "'const'"
    ],
    "IMPORTNAME": [
        "'*'",
        "METHODNAME"
    ],
    "CLASSDEF": [
        "'class ' IDENTIFIER '{\\n' CLASSCONTENT '\\n}\\n'",
        "'class ' IDENTIFIER 'extends ' IDENTIFIER '{\\n' CLASSCONTENT '\\n}\\n'"
    ],
    "CLASSCONTENT": [
        "AUX_70"
    ],
    "AUX_70": [
        "''",
        "GROUP_4"
    ],
    "GROUP_4": [
        "METHODDEF '\\n' CLASSCONTENT"
    ],
    "FUNCTIONDEF": [
        "'function ' IDENTIFIER FUNCTIONARGS '{\\n' START '\\n}\\n'",
        "IDENTIFIER ' => ' EXPR",
        "IDENTIFIER ' => ' '{\\n' START '\\n}'",
        "FUNCTIONARGS ' => ' EXPR",
        "FUNCTIONARGS ' => ' '{\\n' START '\\n}'"
    ],
    "METHODDEF": [
        "IDENTIFIER FUNCTIONARGS '{\\n' START '\\n}\\n'"
    ],
    "FUNCTIONARGS": [
        "'()'",
        "'(' IDENTIFIERLIST ')'"
    ],
    "EXPR": [
        "'(' EXPR ')' AUX_1",
        "'{' OBJMEMBER '}' AUX_1",
        "VAR AUX_1",
        "'...' VAR AUX_1",
        "'delete ' EXPR AUX_1",
        "'new ' IDENTIFIER ARGS AUX_1",
        "'await ' EXPR AUX_1",
        "LITERAL AUX_1",
        "IDENTIFIER AUX_1",
        "METHODCALL AUX_1",
        "'(' ARITHMETICOPERATION ')' AUX_1",
        "'(' COMPARISONOPERATION ')' AUX_1",
        "'(' BYTEWISEOPERATION ')' AUX_1",
        "'(' LOGICALOPERATION ')' AUX_1",
        "'(' EXPR ' ? ' EXPR ' : ' EXPR ')' AUX_1"
    ],
    "ARITHMETICOPERATION": [
        "EXPR '/' EXPR",
        "EXPR '*' EXPR",
        "EXPR '+' EXPR",
        "EXPR '-' EXPR",
        "EXPR '%' EXPR",
        "EXPR '**' EXPR",
        "EXPR '++'",
        "'++' EXPR",
        "'--' EXPR",
        "EXPR '--'"
    ],
    "BYTEWISEOPERATION": [
        "EXPR ' & ' EXPR",
        "EXPR ' | ' EXPR",
        "EXPR ' ^ ' EXPR",
        "'~' EXPR",
        "EXPR ' << ' EXPR",
        "EXPR ' >> ' EXPR",
        "EXPR ' >>> ' EXPR"
    ],
    "COMPARISONOPERATION": [
        "EXPR '<' EXPR",
        "EXPR '>' EXPR",
        "EXPR '<=' EXPR",
        "EXPR '>=' EXPR",
        "EXPR '==' EXPR",
        "EXPR '===' EXPR",
        "EXPR '!=' EXPR",
        "EXPR '<=>' EXPR",
        "EXPR '===' EXPR"
    ],
    "LOGICALOPERATION": [
        "EXPR ' && ' EXPR",
        "EXPR ' || ' EXPR",
        "'!' EXPR"
    ],
    "NULL": [
        "'null'"
    ],
    "LITERAL": [
        "NULL",
        "BOOLEAN",
        "NUMBER",
        "STRING",
        "ARRAY",
        "REGEX"
    ],
    "BOOLEAN": [
        "'true'",
        "'false'"
    ],
    "ZERO": [
        "'0'"
    ],
    "ONE": [
        "'1'"
    ],
    "TWO": [
        "'2'"
    ],
    "THREE": [
        "'3'"
    ],
    "FOUR": [
        "'4'"
    ],
    "FIVE": [
        "'5'"
    ],
    "SIX": [
        "'6'"
    ],
    "SEVEN": [
        "'7'"
    ],
    "BINARYDIGITS": [
        "ZERO",
        "ONE",
        "'1010'",
        "'1_11'",
        "'10_01'",
        "'1111111111111111111111111111111'",
        "'101010101110101001011010101'"
    ],
    "OCTALDIGITS": [
        "ZERO",
        "ONE",
        "'123'",
        "'5_0_2'",
        "'324'",
        "'5__432'",
        "'7777777777777777777777'",
        "'1247237465234'"
    ],
    "OCTALDIGIT": [
        "ZERO",
        "ONE",
        "TWO",
        "THREE",
        "FOUR",
        "FIVE",
        "SIX",
        "SEVEN"
    ],
    "DECIMALDIGITS": [
        "ZERO",
        "ONE",
        "'20'",
        "ONETWOTHREEFOUR",
        "'66'",
        "'234_9'",
        "'99999999999999999999'",
        "'12345678123456'"
    ],
    "HEXDIGITS": [
        "ZERO",
        "'ABCFDFE0_1203453abcd'",
        "ONE",
        "ONETWOTHREEFOUR",
        "'1asdf'",
        "'A1'",
        "'1F_F'",
        "'4346'",
        "'FE_D983'",
        "'FFFFFFFFFF'"
    ],
    "ONETWOTHREEFOUR": [
        "'1234'"
    ],
    "HEXDIGIT": [
        "ZERO",
        "ONE",
        "TWO",
        "THREE",
        "FOUR",
        "FIVE",
        "SIX",
        "SEVEN",
        "'8'",
        "'9'",
        "'A'",
        "'B'",
        "'C'",
        "'D'",
        "'E'",
        "'F'"
    ],
    "BINNUMBER": [
        "'0b' BINARYDIGITS",
        "'0B' BINARYDIGITS"
    ],
    "EXPONENT": [
        "'e' DECIMALDIGITS",
        "'e-' DECIMALDIGITS",
        "'E' DECIMALDIGITS",
        "'E-' DECIMALDIGITS"
    ],
    "DECIMALNUMBER": [
        "DECIMALDIGITS",
        "'0D' DECIMALDIGITS",
        "'0d' DECIMALDIGITS"
    ],
    "HEXNUMBER": [
        "'0x' HEXDIGITS",
        "'0X' HEXDIGITS"
    ],
    "OCTALNUMBER": [
        "'0O' OCTALDIGITS",
        "'0o' OCTALDIGITS",
        "'0' OCTALDIGITS"
    ],
    "FLOATNUMBER": [
        "DECIMALNUMBER '.' DECIMALDIGITS",
        "OCTALNUMBER '.' OCTALDIGITS",
        "HEXNUMBER '.' HEXDIGITS",
        "DECIMALNUMBER '.' DECIMALDIGITS EXPONENT",
        "OCTALNUMBER '.' OCTALDIGITS EXPONENT",
        "HEXNUMBER '.' HEXDIGITS EXPONENT"
    ],
    "NUMBER": [
        "OCTALNUMBER",
        "FLOATNUMBER",
        "HEXNUMBER",
        "DECIMALNUMBER",
        "BINNUMBER",
        "ZERO",
        "ONE",
        "'1.00'",
        "'1/2'",
        "'1E2'",
        "'1E02'",
        "'1E+02'",
        "'-1'",
        "'-1.00'",
        "'-1/2'",
        "'-1E2'",
        "'-1E02'",
        "'-1E+02'",
        "'1/0'",
        "'0/0'",
        "'-2147483648/-1'",
        "'-9223372036854775808/-1'",
        "'-0'",
        "'-0.0'",
        "'+0'",
        "'+0.0'",
        "'0.00'",
        "'.'",
        "'0,00'",
        "'0.0/0'",
        "'1.0/0.0'",
        "'0.0/0.0'",
        "'1,0/0,0'",
        "'0,0/0,0'",
        "'--1'",
        "'999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999'",
        "'0x0'",
        "'0xffffffff'",
        "'0xffffffffffffffff'",
        "'0xabad1dea'",
        "'123456789012345678901234567890123456789'",
        "'1000.00'",
        "'1000000.00'",
        "'100000.000'",
        "'100000000'",
        "'01000'",
        "'08'",
        "'09'",
        "'2.2250738585072011e-308'"
    ],
    "DOUBLEQUOTEDSTRING": [
        "NAUGHTYSTRING",
        "' ' DOUBLEQUOTEDSTRING",
        "NUMBER DOUBLEQUOTEDSTRING",
        "ESCAPEDCHARACTERS DOUBLEQUOTEDSTRING",
        "'#{' EXPR '}' DOUBLEQUOTEDSTRING"
    ],
    "TEMPLATESTRING": [
        "AUX_71"
    ],
    "AUX_71": [
        "''",
        "GROUP_5"
    ],
    "GROUP_5": [
        "DOUBLEQUOTEDSTRING '${' EXPR '}' TEMPLATESTRING"
    ],
    "STRING": [
        "'\"' DOUBLEQUOTEDSTRING '\"'",
        "'\\'' DOUBLEQUOTEDSTRING '\\''",
        "'`' TEMPLATESTRING '`'"
    ],
    "ARRAY": [
        "'[' ARRAYCONTENT ']'",
        "'[]'"
    ],
    "ARRAYCONTENT": [
        "EXPR AUX_72"
    ],
    "AUX_72": [
        "''",
        "GROUP_6"
    ],
    "GROUP_6": [
        "', ' ARRAYCONTENT"
    ],
    "REGEX": [
        "'/' REGEXPATTERN '/'",
        "'/' REGEXPATTERN '/g'",
        "'/' REGEXPATTERN '/i'",
        "'/' REGEXPATTERN '/m'",
        "'/' REGEXPATTERN '/y'"
    ],
    "REGEXPATTERN": [
        "DOUBLEQUOTEDSTRING"
    ],
    "ESCAPEDCHARACTERS": [
        "'\\\\\\\\'",
        "'\\\\\\''",
        "'\\\\\"'",
        "'\\\\0'",
        "'\\\\a'",
        "'\\\\b'",
        "'\\\\f'",
        "'\\\\n'",
        "'\\\\r'",
        "'\\\\#'",
        "'\\\\t'",
        "'\\\\u' HEXDIGIT HEXDIGIT HEXDIGIT HEXDIGIT",
        "'\\\\v'",
        "'\\\\0' OCTALDIGIT OCTALDIGIT",
        "'\\\\x' HEXDIGIT HEXDIGIT"
    ],
    "HASOWNPROPERTY": [
        "'hasOwnProperty'"
    ],
    "NAUGHTYSTRING": [
        "UNDEFINED",
        "'undef'",
        "'en-US'",
        "'year'",
        "NULL",
        "'NULL'",
        "'(null)'",
        "'nil'",
        "'NIL'",
        "BOOLEAN",
        "'True'",
        "'False'",
        "'TRUE'",
        "'FALSE'",
        "'None'",
        "HASOWNPROPERTY",
        "',./;\\'[]\\\\-='",
        "'<>?:\"{}|_+'",
        "'!@#$%^&*()`~'",
        "' '",
        "'%'",
        "'_'",
        "'-'",
        "'--'",
        "'--version'",
        "'--help'",
        "'$USER'",
        "'`ls -al /`'",
        "'<<< %s(un=\\'%s\\') = %u'",
        "'+++ATH0'",
        "'CON'",
        "'PRN'",
        "'AUX'",
        "'CLOCK$'",
        "'NUL'",
        "'A:'",
        "'ZZ:'",
        "'COM1'",
        "'LPT1'",
        "'COM2'",
        "'DCC SEND STARTKEYLOGGER 0 0 0'",
        "'https://www.google.com/'"
    ],
    "IDENTIFIER": [
        "'Object'",
        "VAR",
        "'Function'",
        "'main'",
        "'opt'",
        "'Boolean'",
        "'Symbol'",
        "'JSON'",
        "'Error'",
        "'EvalError'",
        "'RangeError'",
        "'ReferenceError'",
        "'SyntaxError'",
        "'TypeError'",
        "'URIError'",
        "'this'",
        "'Number'",
        "'Math'",
        "'Date'",
        "'String'",
        "'RegExp'",
        "'Array'",
        "'Int8Array'",
        "'Uint8Array'",
        "'Uint8ClampedArray'",
        "'Int16Array'",
        "'Uint16Array'",
        "'Int32Array'",
        "'Uint32Array'",
        "'Float32Array'",
        "'Float64Array'",
        "'DataView'",
        "'ArrayBuffer'",
        "'Map'",
        "'Set'",
        "'WeakMap'",
        "'WeakSet'",
        "'Promise'",
        "'AsyncFunction'",
        "'asyncGenerator'",
        "'Reflect'",
        "'Proxy'",
        "'Intl'",
        "'Intl.Collator'",
        "'Intl.DateTimeFormat'",
        "'Intl.NumberFormat'",
        "'Intl.PluralRules'",
        "'WebAssembly'",
        "'WebAssembly.Module'",
        "'WebAssembly.Instance'",
        "'WebAssembly.Memory'",
        "'WebAssembly.Table'",
        "'WebAssembly.CompileError'",
        "'WebAssembly.LinkError'",
        "'WebAssembly.RuntimeError'",
        "'arguments'",
        "'Infinity'",
        "'NaN'",
        "UNDEFINED",
        "NULL",
        "'console'"
    ],
    "UNDEFINED": [
        "'undefined'"
    ],
    "SIMDTYPE": [
        "SIMDTYPEBOOL",
        "SIMDTYPEINT",
        "SIMDTYPEUINT",
        "SIMDTYPEFLOAT"
    ],
    "SIMDTYPEBOOL": [
        "'Bool8x16'",
        "'Bool16x8'",
        "'Bool32x4'",
        "'Bool64x2'"
    ],
    "SIMDTYPEINT": [
        "'Int8x16'",
        "'Int16x8'",
        "'Int32x4'"
    ],
    "SIMDTYPEUINT": [
        "'Uint8x16'",
        "'Uint16x8'",
        "'Uint32x4'"
    ],
    "SIMDTYPEFLOAT": [
        "'Float32x4'",
        "'Float64x2'"
    ],
    "SIMDFUNCTION": [
        "'splat'",
        "'check'",
        "'extractLane'",
        "'replaceLane'",
        "'load'",
        "'load1'",
        "'load2'",
        "'load3'",
        "'store'",
        "'store1'",
        "'store2'",
        "'store3'",
        "'abs'",
        "'add'",
        "'addSaturate'",
        "'div'",
        "'mul'",
        "'sub'",
        "'subSaturate'",
        "'sqrt'",
        "'select'",
        "'neg'",
        "'reciprocalApproximation'",
        "'reciprocalSqrtApproximation'",
        "'shuffle'",
        "'swizzle'",
        "'max'",
        "'maxNum'",
        "'min'",
        "'minNum'",
        "'equal'",
        "'notEqual'",
        "'lessThan'",
        "'lessThanOrEqual'",
        "'greaterThan'",
        "'greaterThanOrEqual'",
        "'and'",
        "'or'",
        "'xor'",
        "'not'",
        "'shiftLeftByScalar'",
        "'shiftRightByScalar'",
        "'allTrue'",
        "'anyTrue'",
        "'fromFloat32x4'",
        "'fromFloat32x4Bits'",
        "'fromFloat64x2Bits'",
        "'fromInt32x4'",
        "'fromInt32x4Bits'",
        "'fromInt16x8Bits'",
        "'fromInt8x16Bits'",
        "'fromUint32x4'",
        "'fromUint32x4Bits'",
        "'fromUint16x8Bits'",
        "'fromUint8x16Bits'"
    ]
}
